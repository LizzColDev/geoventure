openapi: 3.0.0
info:
  version: 1.0.0
  title: GeoVenture API
  description: An API for managing users and games with GeoVenture.

tags:
  - name: users
    description: Operations about user
  - name: games
    description: Everything about your Games

paths:
  /users:
    get:
      tags: 
        - users
      summary: Get all users
      responses:
        '200':
          description: OK

    post:
      tags: 
        - users
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '201':
          description: Created

  /user/{userId}:
    get:
      tags: 
        - users
      summary: Get a user by ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID of the user
      responses:
        '200':
          description: OK
        '404':
          description: Not Found

    put:
      tags: 
        - games
      summary: Update a user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID of the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '200':
          description: OK
        '404':
          description: Not Found

    delete:
      tags: 
        - users
      summary: Delete a user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID of the user
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found

  /games:
    get:
      tags: 
        - games
      summary: Get all games
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
        '404':
          description: No games found

    post:
      tags: 
        - games
      summary: Create a new game
      description: Creates a new game associated with the provided user ID, with the initial time set to the Unix time of the request and a randomly generated initial location.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGameRequest'
      responses:
        '201':
          description: Game created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '404':
          description: User not found
        '500':
          description: Internal Server Error

  /game/{gameId}:
    get:
      tags: 
        - games
      summary: Get a game by ID
      parameters:
        - in: path
          name: gameId
          required: true
          schema:
            type: string
            description: ID of the game
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '404':
          description: Game not found

    patch:
      tags: 
        - games
      summary: Update a game
      description: Update a game where the backend should save the guessed location input from the user as the end location of the game round.
      parameters:
        - in: path
          name: gameId
          required: true
          schema:
            type: string
            description: ID of the game to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGameRequest'
      responses:
        '201':
          description: Game information updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '404':
          description: Game not found
        '400':
          description: Invalid request

    delete:
      tags: 
        - games
      summary: Delete a game
      parameters:
        - in: path
          name: gameId
          required: true
          schema:
            type: string
            description: ID of the game
      responses:
        '204':
          description: No Content
        '404':
          description: Game not found

components:
  schemas:
    UpdateGameRequest:
      type: object
      properties:
        latitude:
          type: number
          description: Latitude of the guessed location
        longitude:
          type: number
          description: Longitude of the guessed location
      required:
        - latitude
        - longitude

    Game:
      type: object
      properties:
        gameId:
          type: string
          description: ID of the game
        userId:
          type: string
          description: ID of the user associated with the game
        initialTime:
          type: integer
          description: Unix time of the game creation
        initialLocation:
          type: object
          properties:
            latitude:
              type: number
              description: Latitude of the initial location
            longitude:
              type: number
              description: Longitude of the initial location
        streetViewImage:
          type: string
          format: uri
          description: URL of the street view image
      required:
        - gameId
        - userId
        - initialTime
        - initialLocation
        - streetViewImage

    UpdateGameResponse:
      allOf:
        - $ref: '#/components/schemas/Game'
        - type: object
          properties:
            endTime:
              type: integer
              description: Unix time when the game was updated
            guessedLocation:
              type: object
              properties:
                latitude:
                  type: number
                  description: Latitude of the guessed location
                longitude:
                  type: number
                  description: Longitude of the guessed location
              description: End location of the game round
            distance:
              type: integer
              description: Distance between the guessed location and the initial location
            isGuessCorrect:
              type: boolean
              description: Indicates whether the guessed location is correct
